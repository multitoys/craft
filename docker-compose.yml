version: '3'

networks:
  backend-network:
    driver: bridge

volumes:
  php:

services:

  php:
    image: artjoker/7.4:php-mysql
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    restart: always
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      #      - ./docker/conf.prod/php/php.ini:/usr/local/etc/php/php.ini
      #      - ./docker/conf.prod/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./:/app:rw
    env_file:
      - .env
    command: php-fpm --nodaemonize -d "opcache.enable=0" -d "display_startup_errors=On" -d "display_errors=On" -d "error_reporting=E_ALL" -R
    depends_on:
      - redis
      - db
    networks:
      - backend-network

  console:
    image: artjoker/7.4:php-mysql
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    restart: always
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      #      - ./docker/conf.prod/php/php.ini:/usr/local/etc/php/php.ini
      #      - ./docker/conf.prod/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./:/app:rw
    env_file:
      - .env
    command: ["./craft", "queue/listen"]
    depends_on:
      - redis
      - db
    networks:
      - backend-network

  nginx:
    image: artjoker/7.4:nginx
    restart: always
    volumes:
      - ./docker/conf.prod/nginx/fastcgi_params:/etc/nginx/fastcgi_params
      - ./docker/conf.prod/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./:/app:ro
    env_file:
      - .env
    depends_on:
      - php
    ports:
      - 80:80
    networks:
      - backend-network

  redis:
    image: redis:alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 3s
      retries: 5
    networks:
      - backend-network

  db:
    image: mysql:8
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_DATABASE: craft_cms
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: passw0rd
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    networks:
      - backend-network
